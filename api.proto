syntax = "proto3";
option optimize_for = LITE_RUNTIME;

import "common.proto";

package monarcpb;

message SysCtrlToNavCPU {
    message Telemetry {
        ThreeAxis accelerometer = 1;
        ThreeAxis gyroscope = 2;
        ThreeAxis magnetometer = 3;

        // From the barometer.
        int32 atmospheric_pressure = 4;

        // From the ultrasonic altimeter.
        int32 altitude = 5;
    }
    Telemetry telemetry = 1;

    message AnalogSensors {
        int32 sys_3v3_isense = 1;
        int32 sys_5v_isense = 2;
        int32 vgps_isense = 3;
        int32 vusb_isense = 4;
        int32 vfltctl_isense = 5;
        int32 navcmp_isense = 6;
        int32 vradio_isense = 7;
        int32 tp27 = 8;
        int32 vradio_vsense = 9;
        int32 navcmp_vsense = 10;
        int32 vusb_vsense = 11;
        int32 vfltctl_vsense = 12;
        int32 vgps_vsense = 13;
        int32 sys_5v_vsense = 14;
        int32 vsys_vsense = 15;
        int32 sys_3v3_vsense = 16;
    }
    AnalogSensors analog_sensors = 2;

    message NavigationCommand {
        // Keep this in sync with monarc_uart_driver/msg/NavCommand.msg!
        enum MissionType {
          TAKEOFF = 0;
          LAND = 1;
          FORWARD = 2;
          UP = 3;
          DOWN = 4;
          TURN_RIGHT_90 = 5;
          TURN_LEFT_90 = 6;
          NAVIGATE_TO_GOAL = 7;
        }
        MissionType mission_num = 1;
        GPSFix gps_location = 2;
    }
    NavigationCommand command = 3;

    message FlightControl {
        int32 pitch = 1;
        int32 roll = 2;
        int32 yaw = 3;
        int32 throttle = 4;
    }
    FlightControl control = 4;
}

message NavCPUToSysCtrl {
    message Telemetry {
        GPSFix GPS = 1;
    }
    Telemetry telemetry = 1;

    message ComputerState {

    }
    ComputerState state = 2;

    message FlightControl {
        int32 pitch = 1;
        int32 roll = 2;
        int32 yaw = 3;
        int32 throttle = 4;
    }
    FlightControl control = 3;
}
